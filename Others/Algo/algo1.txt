//Les algorithmes peuvent être écrits naturellement mais en respectant les règles! Et après on va pouvoir les transformer en LaTeX code.

Algo0 Algorithme Général
Sortie
	ListOrdo: le tableau qui contient la matrice d'affectation des VMs sur les machines phiSiques.
Variables
	Entier coûtTotal;
Debut
	CalculerIntervalle();
	CréerListeServeurTriée();
	Pour i de 0 à T()-1 Faire
		CréerListeTâche(i);
		Ordonnancer(i);
	Fin Pour
	coûtTotal = CalculerCoûtTotal();
	retourner coûtTotal;
Fin


Algo1 CaculerIntervalle
Sortie
	ListeIntervalle: le tableau des intervalles trouvés
Variables
	Entier nbIntervalle=0;
Debut
	ListeIntervalle[0].BorneInf = 0;
	ListeIntervalle[0].BorneSup = 0;
	Pour t allant de 0 à T-2 Faire
		Pour iTache allant de 0 à N-1 Faire
			Si( u(iTache,t)!=u(iTache,t+1)) Alors //Intervalle trouvé
				nbIntervalle = nbIntervalle+1;
				ListeIntervalle[nbIntervalle-1].BorneSup = t;
				ListeIntervalle[nbIntervalle].BorneInf = t+1; //Intervalle suivant
			Fin Si
		Fin Pour
	Fin Pour
	nbIntervalle=nbIntervalle+1;
	ListeIntervalle[nbIntervalle-1].BorneSup = T-1;
Fin


Algo2 CréerListeServeurTriée
Sortie
	ListeServeur: le tableau des serveurs triés par ordre croissant en fonction du coût normalisé
Variables
	Réel CoutTotal, SommeCaract;
Debut
	Pour i allant de 0 à M-1 Faire
		ListeServeur[i].IndiceServeur=i;
		CoutTotal=mc(i)*alphac(i) +mg(i)*alphag(i) + mr(i)*alphar(i)+ mh(i)*alphah(i);
		SommeCaract = mc(i)+mg(i)+mr(i)+mh(i);
		ListeServeur[i].CoutNorm = CoutTotal / SommeCaract ;
	Fin Pour
	TrierParCoutNorm(ListeServeur);
Fin

