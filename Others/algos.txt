Algo0 Algorithme Général
Variables
	Entier nbIntervalle;
Debut
	CalculerIntervalle();
	CréerListeServeurTriée();
	pour i de 0 à nbIntervalle-1 faire
		CréerListeTâche(i);
		Ordonnancer(i);
	fin pour
	CalculerCoûtTotal();
Fin

Algo1 CaculerIntervalle
	Sortie: ListeIntervalle, qui est le tableau des intervalles trouvés
Variables
	Entier nbIntervalle=0;
Debut
	ListeIntervalle[0].BorneInf = 0;
	ListeIntervalle[0].BorneSup = 0;
	pour t allant de 0 à T-2 faire
		pour iTache allant de 0 à N-1 faire
			si( u(iTache,t)!=u(iTache,t+1)) alors //Intervalle trouvé
				nbIntervalle = nbIntervalle+1;
				ListeIntervalle[nbIntervalle-1].BorneSup = t;
				ListeIntervalle[nbIntervalle].BorneInf = t+1; //Intervalle suivant
			fin si
		fin pour
	fin pour
	nbIntervalle=nbIntervalle+1;
	ListeIntervalle[nbIntervalle-1].BorneSup = T-1;
Fin


Algo2 CréerListeServeurTriée
	Sortie: ListeServeur, qui est le tableau des serveurs triés par ordre croissant en fonction du coût normalisé
Variables
	Réel CoutTotal, SommeCaract;
Debut
	pour i allant de 0 à M-1 faire
		ListeServeur[i].IndiceServeur=i;
		CoutTotal=mc(i)*alphac(i) +mg(i)*alphag(i) + mr(i)*alphar(i)+ mh(i)*alphah(i);
		SommeCaract = mc(i)+mg(i)+mr(i)+mh(i);
		ListeServeur[i].CoutNorm = CoutTotal / SommeCaract ;
	fin pour
	TrierParCoutNorm(ListeServeur);
Fin

Algo3 CréerListeTâche
	Sortie: ListeGPU1, ListeGPU2, ListeCPU1, ListeCPU2, ListePrGPU1, ListePrGPU2, ListePrCPU1, ListePrCPU2. Les tâches sont réparties dans ces 8 listes selon leurs besoins de ressources et leurs préemptabilités. 
Debut
	//Pour les tâches non préemptables
	
Fin
