Algo AllumageMachine()
Entrée
	indiceInter: L'intervalle à traiter.
Sortie
	indiceAllume: indice de la machine à allumer. -1 s'il y en a pas.
Variables
	inf: instant inférieur de l'intervalle
	sup: instant supérieur de l'intervalle
	critère: la différence entre le coût de rallumer la machine et le coût de ne pas la rallumer. Plus c'est moins, mieux c'est.
	critèreMin: le minimum du critère.
Debut
	inf = ListeIntervalles[indiceInter].BorneInf;
	sup = ListeIntervalles[indiceInter].BorneSup;
	critèreMin = 0;
	Pour chaque machine m Faire
		Si (m n'est pas allumée) Alors
			critère = (sup - inf + 1) * beta(m); //Le coût d'être ON
			Pour (chaque tâche t préemptable qui n'est pas encore affectée) Faire
				Si (m peut recevoir t) Alors
					critère = critère + (sup - inf + 1 ) * CalculCoutAffectation(t,m) - rho(t);
				Fin Si
			Fin Pour
			Si (critère < critèreMin) Alors
				critèreMin  = critère;
				indiceAllume = m.indiceServeur;
			Fin Si
		Fin Si
	Fin Pour
	
	Si(critèreMin < 0) Alors
		Retourner indiceAllume;
	Sinon
		Retourner -1;
	Fin Si
Fin